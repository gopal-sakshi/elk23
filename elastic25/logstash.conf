input {
    file {

        # this wont work... the input file must ACTUALLY be in logstash container
        # not on the host machine
        # path => "/home/gsakshi/Desktop/junk23/blah11.log"

        # so, thats why use shared volumes between host & container
        # now hostFile changes ===> containerFile changes ==> input plugin gets triggered 
        path => ["/usr/share/logstash/dockerOutputs.log", "/usr/share/logstash/fileInContainer.log"]

        type => "fileInput23"

        # look into sincedb_path and stuff
        start_position => "beginning"
    }
    gelf {
        type => docker44
        # host => "10.0.53.216"     # this wont work... 
        host => "0.0.0.0"         # this WORKS - but we wont need as we run logstash
                                        # in a docker container... had we run logstash
                                        # directly without docker, then we can give different hosts
        port => 12201
    }
	# beats {
	# 	port => 5044
	# }
    # stdin { }           # whats this again23 ??????????
	tcp {
		port => 50000
        type => 'tcp23'
	}
}

filter {
    # grok {
    #     match => { "message" => }
    # }
    date {
        match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
    }
}

output {
	if [type] == "tcp23" { 
        
        # elasticsearch { 
        #     hosts => "elasticsearch:9200" 
        #     index => "tcp50000"
        #     data_stream => false            # if we use index, then data_stream must be false
        # }

        # tcp logs anni file lo raayabadathaayi... we will not save them in elastic
        # it seems, sometimes we can edit logstash.conf file ===> and changes are instantly reflected
        # we dont need to restart the logstash container...
        file {
            path => "/usr/share/logstash/blah1.log"
        }
    } else if [type] == "fileInput23" { 
        elasticsearch { 
            hosts => "elasticsearch:9200" 
            index => "file-stuff-23"
            data_stream => false
        }
    } else if [type] == "docker44" {
        elasticsearch { 
            hosts => "elasticsearch:9200" 
            index => "gelf-stuff-23"
            data_stream => false
        }
    } else {
        elasticsearch { 
            hosts => "elasticsearch:9200" 
            index => "other-stuff-23"
            data_stream => false
        }
    }
    # elasticsearch {
    #     hosts => "elasticsearch:9200" 
    # }
    stdout { 
        # codec => rubydebug                      # may be for debug purposes ??
        codec => json 
    }
    file {
        path => "/usr/share/logstash/blah1.log"
    }
}